DELIMITER $$
CREATE TRIGGER RENTS_INSERT AFTER INSERT ON RENTS -- [1]
FOR EACH ROW
BEGIN
INSERT INTO RENTS_AUD (EVENT_DATE, EVENT_TYPE, RENT_ID, NEW_BOOK_ID, NEW_READER_ID, -- [2]
NEW_RENT_DATE, NEW_RETURN_DATE) -- [3]
VALUE(CURTIME(), "INSERT", NEW.RENT_ID, NEW.BOOK_ID, NEW.READER_ID, NEW.RENT_DATE, -- [4]
NEW.RETURN_DATE); -- [5]
END $$
DELIMITER ;
1359 - Trigger already exists
mysql> INSERT INTO RENTS (BOOK_ID, READER_ID, RENT_DATE, RETURN_DATE)
VALUES (2, 4, CURDATE() - 7, NULL);
COMMIT;

INSERT INTO RENTS (BOOK_ID, READER_ID, RENT_DATE, RETURN_DATE)
VALUES (2, 4, CURDATE() - 7, NULL);
COMMIT;

DELIMITER $$
CREATE TRIGGER RENTS_DELETE AFTER DELETE ON RENTS -- [1]
FOR EACH ROW
BEGIN
INSERT INTO RENTS_AUD (EVENT_DATE, EVENT_TYPE, RENT_ID) -- [2]
VALUE(CURTIME(), "DELETE", OLD.RENT_ID); -- [3]
END $$
DELIMITER ;

DELETE FROM RENTS WHERE RENT_ID = 24;
COMMIT;

DELIMITER $$
CREATE TRIGGER RENTS_UPDATE AFTER UPDATE ON RENTS
FOR EACH ROW
BEGIN
INSERT INTO RENTS_AUD (EVENT_DATE, EVENT_TYPE, RENT_ID, NEW_BOOK_ID, NEW_READER_ID,
NEW_RENT_DATE, NEW_RETURN_DATE, OLD_BOOK_ID, OLD_READER_ID,
OLD_RENT_DATE, OLD_RENT_DATE)
VALUE(CURTIME(), "UPDATE", OLD.RENT_ID, NEW.BOOK_ID, NEW.READER_ID,
NEW.RENT_DATE, NEW.RETURN_DATE, OLD.BOOK_ID, OLD.READER_ID,
OLD.RENT_DATE, OLD.RETURN_DATE);
END $$
DELIMITER ;

UPDATE RENTS SET RETURN_DATE = CURDATE()
WHERE RENT_ID = 20;
COMMIT;


DELIMITER $$
CREATE TRIGGER READRES_INSERT AFTER INSERT ON READERS
FOR EACH ROW
BEGIN
INSERT INTO READERS_AUD (EVENT_DATE, EVENT_TYPE, READER_ID, NEW_FIRSTNAME, NEW_LASTNAME,
NEW_PESELID, NEW_VIP_LEVEL)
VALUE(CURTIME(), "INSERT", NEW.READER_ID, NEW.FIRSTNAME, NEW.LASTNAME, NEW.PESELID, NEW.VIP_LEVEL);
END $$
DELIMITER ;

INSERT INTO READERS (FIRSTNAME, LASTNAME, PESELID, VIP_LEVEL)
VALUES (‘Maria’, ‘Taylor’, 93071254789, ‘Gold customer’);
COMMIT;

DELIMITER $$
CREATE TRIGGER READER_DELETE AFTER DELETE ON READERS
FOR EACH ROW
BEGIN
INSERT INTO READER_AUD (EVENT_DATE, EVENT_TYPE, READER_ID)
VALUE(CURTIME(), "DELETE", OLD.READER_ID);
END $$
DELIMITER ;

DELETE FROM READERS WHERE READER_ID = 4;
COMMIT;

DELIMITER $$
CREATE TRIGGER READERS_UPDATE AFTER UPDATE ON READERS
FOR EACH ROW
BEGIN
INSERT INTO RES_AUD (EVENT_DATE, EVENT_TYPE, READER_ID, NEW_FIRSTNAME, NEW_LASTNAME,
NEW_PESELID, NEW_VIP_LEVEL)
VALUE(CURTIME(), "UPDATE", OLD.READER_ID, NEW.FIRSTNAME, NEW.LASTNAME,
NEW.PESELID, NEW.VIP_LEVEL, OLD.FIRSTNAME, OLD.LASTNAME,
OLD.PESELID, OLD.VIP_LEVEL);
END $$
DELIMITER ;

UPDATE READERS SET FIRSTNAME = ‘Paul’
WHERE READER_ID = 2;
COMMIT;


DELIMITER $$
CREATE TRIGGER READRES_INSERT AFTER INSERT ON READERS
FOR EACH ROW
BEGIN
INSERT INTO READERS_AUD (EVENT_DATE, EVENT_TYPE, READER_ID, NEW_FIRSTNAME, NEW_LASTNAME,
NEW_PESELID, NEW_VIP_LEVEL)
VALUE(CURTIME(), "INSERT", NEW.READER_ID, NEW.FIRSTNAME, NEW.LASTNAME, NEW.PESELID, NEW.VIP_LEVEL);
END $$
DELIMITER ;

INSERT INTO READERS (FIRSTNAME, LASTNAME, PESELID, VIP_LEVEL)
VALUES (‘Maria’, ‘Taylor’, 93071254789, ‘Gold customer’);
COMMIT;


DELIMITER $$
CREATE TRIGGER READER_DELETE AFTER DELETE ON READERS
FOR EACH ROW
BEGIN
INSERT INTO READER_AUD (EVENT_DATE, EVENT_TYPE, READER_ID)
VALUE(CURTIME(), "DELETE", OLD.READER_ID);
END $$
DELIMITER ;

DELETE FROM READERS WHERE READER_ID = 4;
COMMIT;

DELIMITER $$
CREATE TRIGGER READERS_UPDATE AFTER UPDATE ON READERS
FOR EACH ROW
BEGIN
INSERT INTO RES_AUD (EVENT_DATE, EVENT_TYPE, READER_ID, NEW_FIRSTNAME, NEW_LASTNAME,
NEW_PESELID, NEW_VIP_LEVEL)
VALUE(CURTIME(), "UPDATE", OLD.READER_ID, NEW.FIRSTNAME, NEW.LASTNAME,
NEW.PESELID, NEW.VIP_LEVEL, OLD.FIRSTNAME, OLD.LASTNAME,
OLD.PESELID, OLD.VIP_LEVEL);
END $$
DELIMITER ;

UPDATE READERS SET FIRSTNAME = ‘Paul’
WHERE READER_ID = 2;
COMMIT;



DELIMITER $$
CREATE TRIGGER BOOKS_INSERT AFTER INSERT ON BOOKS
FOR EACH ROW
BEGIN
INSERT INTO BOOKS_AUD (EVENT_DATE, EVENT_TYPE, BOOK_ID, NEW_TITLE, NEW_PUBYEAR,  NEW_BESTSELLER)
VALUE(CURTIME(), "INSERT", NEW.BOOK_ID, NEW.TITLE, NEW.PUBYEAR, NEW.BESTSELLER);
END $$
DELIMITER ;

INSERT INTO BOOKS(TITLE, PUBYEAR, BESTSELLER)
VALUES (‘Misery’, 1984, FALSE);
COMMIT;


DELIMITER $$
CREATE TRIGGER BOOK_DELETE AFTER DELETE ON BOOKS
FOR EACH ROW
BEGIN
INSERT INTO BOOK_AUD (EVENT_DATE, EVENT_TYPE, BOOK_ID)
VALUE(CURTIME(), "DELETE", OLD.BOOK_ID);
END $$
DELIMITER ;

DELETE FROM BOOKS WHERE READER_ID = 5;
COMMIT;

DELIMITER $$
CREATE TRIGGER BOOKS_UPDATE AFTER UPDATE ON BOOKS
FOR EACH ROW
BEGIN
INSERT INTO BOOKS_AUD (EVENT_DATE, EVENT_TYPE, BOOK_ID,  NEW_TITLE, NEW_PUBYEAR,  NEW_BESTSELLER)
VALUE(CURTIME(), "UPDATE", OLD.BOOK_ID, NEW.TITLE, NEW.PUBYEAR,
NEW.BESTSELLER, OLD.TITLE, OLD.PUBYEAR,
OLD.BESTSELLER);
END $$
DELIMITER ;

UPDATE BOOKS SET TITLE = ‘Misery’
WHERE READER_ID = 2;
COMMIT;